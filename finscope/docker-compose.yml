services:
  node-api:
    build:
      context: ./backend/node
      dockerfile: Dockerfile
    container_name: finscope-node
    env_file:
      - ./.env
    environment:
      - PYTHON_SERVICE_URL=http://py-api:8000
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "4000:4000"
    restart: unless-stopped
    healthcheck:
      # Use busybox wget (available in alpine base images) to avoid needing curl in the container
      test: ["CMD-SHELL", "wget -q -O - http://localhost:4000/api/health >/dev/null 2>&1 || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    depends_on:
      - py-api
      - redis
    networks:
      - finscope-net

  py-api:
    build:
      context: ./backend/python
      dockerfile: Dockerfile
    container_name: finscope-python
    env_file:
      - ./.env
    environment:
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "8000:8000"
    restart: unless-stopped
    volumes:
      - ./data/python:/app/data
    healthcheck:
      # Use Python stdlib to check health to avoid requiring curl/wget in slim images
      test: ["CMD-SHELL", "python -c \"import sys,urllib.request; sys.exit(0) if urllib.request.urlopen('http://localhost:8000/health').getcode()==200 else sys.exit(1)\" || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - finscope-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:4000}
        VITE_SUPABASE_URL: ${VITE_SUPABASE_URL}
        VITE_SUPABASE_KEY: ${VITE_SUPABASE_KEY}
        VITE_AUTH_PROVIDER: ${VITE_AUTH_PROVIDER:-email}
        VITE_PY_API_BASE_URL: ${VITE_PY_API_BASE_URL:-http://localhost:8000}
    container_name: finscope-frontend
    env_file:
      - ./.env
    ports:
      - "5173:5173"
    restart: unless-stopped
    depends_on:
      - node-api
    networks:
      - finscope-net

  redis:
    image: redis:7-alpine
    container_name: finscope-redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - finscope-net

networks:
  finscope-net:
    driver: bridge
